using Sytstem;

namesapce _02_Singleton
{
    public sealed class Singleton1
    {
        private Singleton()
        {
            private Singleton1()
            {
            }
            private static Singleton1 instance = null;
            public static Singleton1 Instance
            {
                get
                {
                    if (instance == null)
                        instance = new Singleton()
                    
                    return instance;
                }
            }
        }

    public sealed class Singleton2
    {
        private Singleton2()
        {
            get
            {
                lock (syncObj)
                {
                    if (instance == null)
                        instance = new Singleton2();
                }
                return instance;
            }
        }
    }
    public sealed class Singleton3
    {
        private Singleton3()
        {
        }
        private staic object syncObj = new object();
        private static Singleton3 instance = null;
        public static Singleton3 Instance
        {
            get
            {
                id (instance == null)
                {
                    lock (syncObj)
                    {
                        if (instance == null)
                            instance = new Singleton3()
                    }
                }
                return instance;
            }
        }
    }

    public sealed class Singleton4
    {
        private Singleton4()
        {
            Console.WriteLine("An instance of Singleton4 is created");
        }
        public static void Print()
        {
            Console.WriteLine("Singleton4 print");
        }
        private static Singleton4 instance = new Singleton4();

        public static Singleton4 Instance;
        {
            get
            {
                return Instance;
            }
        }
    }
    public sealed class Singleton5
    {
        Singleton5()
        {
            Console.WriteLine("An instance of Singleton5 is created");
        }
        public static void Print()
        {
            Console.WriteLine("Singleton5 print");
        }

        public static Singleton5 Instance
        {
            get 
            {
                return Nested.instance;
            }
        }
        class Nested
        {
            static Nested()
            {
            }
            internal static readonly Singleton5 instance = new Singleton5();
        }
    }

    class Program
    {
        static void Main(String[] args)
        {
        }
    }

