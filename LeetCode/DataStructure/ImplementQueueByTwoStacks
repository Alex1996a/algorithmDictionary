lintcode 40 Implement Queue by Two Stacks 

As the title decribed, you should only use two stacks to import a queue's action 


The queue should support push(element), pop() and top() where pop is popthe first(a.k.a front) element in the queue.

Both pop and top methos should return the value of first element.

Example
For push(1) pop(), push(2), push(3), 

Challenge 
implement it by two stacks, do not use any ohter data structure and push, pop and top should be O(1) by AVERAGE.


Java Version 

public class Solution {

	private Stack<Integer> stack1;
	private Stack<Integer> stack2;

	public Solution(){

		// source stack
		stack1 = new Stack<Integer>();

		// target stack

		stack2 = new Stack<Integer>();
	}
	
	public void push(int element){

		stack1.push(element);
	}

	public int pop(){

		if (stack2.empty()){
		
			stack1ToStack2(stack1, stack2);
		}
		return stack2.pop();

	public int top(){

		if (stack2.empty()){

			stack1ToStack2(stack1, stack2);
		}
		return stack2.peek();
	}

	private void stack1ToStack2(Stack<Integer> stack1, Stack<Integer> stack2){

		while (!stack1.empty()){
		
			stack2.push(stack1.pop());
		}
	}
	

