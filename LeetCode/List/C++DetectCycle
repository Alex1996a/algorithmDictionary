lintcode : 103 Linked List Cycle 2


*Definition of ListNode

public :
 	int val ;
	ListNode *next;
	ListNode (int val ){

		this->val = val;
		this->next = NUll;

	}

class Solution{

	ListNOde *detectCyle(ListNOde *head){

		if(NULL == head || NULL == head->next){

			return NULL:
		}

		ListNode *slow = head, *fast = head;
		while (NULL != fast && NULL != fast->next){
		
			fast = fast->next->next;
			slow = slow->next;

			if (slow == fast) {

				fast = head;
				while (slow != fast) {
				
					fast = fast->next;
					slow = slow->next;
				}
				return slow;
			}
		}
		return NULL;
	}
};

