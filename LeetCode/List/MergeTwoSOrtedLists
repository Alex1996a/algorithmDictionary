lintcode : Merge K sorted Lists 
9-22


C++  

class Solution{
public:
	/**
	*@param lists: a list of ListNode
	*@return: The head of one sorted list.
	*/

	ListNode *mergeKLists(vector<ListNode *> &lists){

		if (lists.empty()) {
		
			return NULL;
		}

		ListNOde *head = lists[0];

		for (int i = 1;i != lists.size();++i) {

			head = merge2Lists(head, lists[i]);
		}

		return head;
	}

private:

	ListNode *merge2Lists(ListNode *left, ListNode *right) {
		ListNode *dummy = new ListNode(0);
		ListNOde *last = dummy;

		while (NULL != left && NULL != right){

			if (left->val < right->val){
				
				last->next = left;
				left = left->next;
			else{
			
				last->next = right;
				right = right->next;
			}
			last = last->next;
		}

		last->next = (NULL != left) ? left :right;

		return dummy->next;
	}
};
	
