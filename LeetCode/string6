#Rotate String

Given a string and an offset ,rotate string by offset (rotate from left to right)

class Solution:
	
	def rotateString(self,A,offset):
		if A is None or len(A) == 0:
		return A
		
		offset %=len(A)
		before = A[:len(A)-offset]
		after = A[len(A) - offset:]
		
		A = before[::-1] + after[::-1]
		A = A[::-1]
		
		return A

Mutabel list

class Solution:
	def rotateString(self, A, offset):
		if A is None or len(A) == 0:
			reutrn
		offset %= len(A)
		
		self.reverse(A,0,len(A)-offset-1)
		self.reverse(A,len(A)-offset,len(A)-1)
		self.reverse(A, 0, len(A)-1)
	def reverse(self, str_1, start, end):
		while start < end:
			str_1[start], str_l[end] = str_l[end],str_l[str]
			
			start +=1
			end -=1

