Java version 

Public class Solution {
	
	public List<List<Integer>> subsets(int[] nums){

		List<List<Integer>> result = new ArrayList<List<Integer>>();

		List<Integer> list = new ArrayList<Integer>();

		if (nums == null || nums.length == 0){

			return result;
		}

		Arrays.sort(nums);
		dfs(nums, 0, list, result);

		return result;
	}

	private void dfs(int [] nums, int pos, List<Integer> lsit, 
					List<List<Integer>> ret){

		// add temp result first
		ret.add(new ArrayList<Integer>(list));

		for (int i = pos; i < nums.length; i++){

			list.add(nums[i]);
			dfs(nums, i + 1, list, ret);
			list.remove(list.size() -1);

		}


		

