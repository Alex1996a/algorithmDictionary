Given a list of numbers with duplicate number in it . Find all unique permutaitons...


For numbers [1,2,2] the qunique permutations are .

Do it without recursion.


C++ version

class Solution{
public:
	/**
	* @param nums : A list of integers.
	* @return : A list of unque permutation

	*/

	vector<vector<int> > permuteUnique(vector<int>&nums){

	if (nums.empty()) {

		return ret;
	}

	// important ! sort before call `backTrack`

	sort(nums.begin(), nums.end());
	vector<boo> visited(nums.size(), false);
	vector<int> list;
	backTrack(ret, list, visited, nums);

	return ret;
}


private:
	void backTrack(vector<vector><int>> &result, vector<int> &list, \ 
	
