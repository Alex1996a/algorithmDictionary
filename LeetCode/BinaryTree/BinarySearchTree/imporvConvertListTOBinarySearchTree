* Definition for ListNode.
* public class ListNode{
* 	int val;
	ListNOde next;
	ListNOde(int val){
	
		this.val = val;
		this.next = null;
	}
}

definiton of TreeNode:
* public class TreeNode{

	public int val;
	public TreeNOde left, right;
	public TreeNode(int val){

		this.val = val;
		this.left = this.right = null;
	}
}

public class Solution{

	/**
	* @param head: The first node of linked list.
	* @return : a tree node 
	*/

	public TreeNode sortedListToBST(ListNode head){

		if (head == null){
		
			return null;
		}

		return helper(head);
	}

	private TreeNode helper(ListNode head){

		if (head == null){
		
			return null;
		}

		if (head.next == null){

			return new TreeNOde(head.val);
	}

		ListNOde pre = null;
		ListNOde slow = head, fast = head;

		while (fast != null && fast.next != null){

			pre = slow;
			slow = slow.next;
			fast = fast.next.next;
		}

		pre.next = null;


		TreeNode root = new TreeNode(slow.val);
		TreeNode L = helper(head);
		TreeNode R = helpewr(slow.next);
		
		root.left = L;
		root.right = R;
	
		return root;
	}
}


