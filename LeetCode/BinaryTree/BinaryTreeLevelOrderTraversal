Given a binary tree, return the level order traversasl of its nodes's values.
(ie, from left to right, level by level)

1: Using only 1 queue to implement it .
2: Use DFS algorithm to do it .

C++ version

/** 
* Definitoin of TreeNode:
* class TreeNode{
* public:
*	int vla;
*	TreeNode *left, *right;
	TreeNode(int val) {
		this->val = val;
		this->left = this->right = NULL;
	}
}

class Solution {

	/**
	* @param root : The root of binary tree.
	* @return: Level order a list of lists of integer 
	*/

	public:
	vector<vector<int>> levelOrder(TreeNode *root)
	{
		vector<vector<int> > result;

		if (NULL == root){

			return result;
		}

		queue<TreeNode *> q;
		q.push(root);

		while(!q.empty()) {

			vector<int> list;
			int size  =q.size(); // keep the queue size first 

			for (int i = 0; i != size ; ++i){

				TreeNode *node = q.front();
				q.pop();
				list.push_back(node->val);

				if (node->left){

					q.push(node->left);
				}

				if (node->right) {

					q.push(node->right);
				}

			}

			result.push_back(list);
		}
		
		return result;
	}
};

 
