iteration : using Stack....

* Definition of TreeNode:
* class TreeNode {
* public:
*		int val;
*		TreeNode *left, *right;
*		TreeNode(int val){
			this->val = val;
			this->left = this->right = NULL;
	}
*}

class Solution{
public:

	/**
	* @param
	* @param
	* 
	*/

	int maxDepth(TreeNode *root){

		if (NULL == root){
		
			return 0;
		}
		
		TreeNode *curr = NULL , *prev = NULL;
		stack<TreeNode *> s;
		s.push(root);

		int max_depth = 0;
		
		while(!s.empth()){

			curr = s.top();
			if (!prev || prev-left == curr || prev->right == curr){

				if (curr->left) {
			
					s.push(curr->left);
				else if (curr->right){

					s.push(curr->right);
				}

				else if (curr->left == prev) {

					if (curr->right){

						s.push(curr->right);
					}
				else{
					s.pop();
				}
				
				prev = curr;
			
				if (s.size() > max_depth) {

					max_depth = s.size();
				}
			}
		return max_depth;
	}
};

