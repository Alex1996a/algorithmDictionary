
C++ version 

class Solution{

public: 
	/**
	* @param m : An integer m denotes the size of a backpack
	* @param A : Given n items with size A[i]
	* @return : The maximum size
	*/

	int backPack(int m, vector<int> A){

		if (A.empty() || m < 1){

			return 0;
		}

		const int N = A.size() +1;
		const int M = m + 1;

		vector<vector<bool> > result;

		result.resize(N);
	
		for (vector<int>::size_type i = 0; i != N;++i){

			result[i].resize(M);
			std::fill(result[i].begin(),result[i].end(), false);

		}

		result[0][0] = true;

		for (int i = 1; i != N; ++i){

			for (int j = 0; j != M; ++j){

				if (j < A[i -1]{

					result[i][j] = result[i -1][j];
				}
				else{

					result[i][j] = result[i -1 ][j] || result[i -1][j -A[i -1]];
				}
			}
		}

		// return the largest i if true 


		for (int i = M; i > 0; --i){

			if (result[N -1][i -1]{
			
				return (i -1);
			}
		}

		return 0;
	}
};	
