C++ version 
11-5
lintcode 107 Word Break

Given a string s and a dictionary of words dict, determine if s
can be segmented into a space-separated sequence of one or more dictionary words.

DP_sequence problem 

class Solution {
public: 
	bool wordBreak(sting s, unordered_set<string> & wordDict){
	
		if (s.empty()) return true;

		if (wordDict.empty()) return false;

		// get the max word length of word

		int max_word_len = 0;

		for (unordered_set<string>::iterator it = wordDict.begin()
			it != wordDict.end();++it){

			max_word_len = max(max_word_len, (*it).size());
		}

		vector<bool> can_break(s.size() + 1, false);
		
		can_break[0] = true;

		for (int i = 1; i <= s.size();++i){

			for (int j = i -1; j >= 0; --j){

				//optimize for too long interval

				if (i -j > max_word_len) break;
		
				if (can_break[j] && wordDict.find(s.substr(j, i -j))!=
wordDict.end()){

			can_break[i] = true;
			break;
			}
		}
	}
	return can_break[s.size()];
	}
};

