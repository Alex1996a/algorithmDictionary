lintcode : 170 Rotate List

Given a list, rotate the list to the right by K places, where k is non-negative

Java : 

* Definition for singly-linked list.
* public class ListNode{
	int val;
	ListNode next;
	ListNode(int x){
		val = x;
		next = null;
	}
}

public class Solution{
	/**
	*@param head: the list

	public ListNode rotateRight(ListNode head, int k){

		if (head == null) return head;
		ListNode fast = head, slow = head;
		int len = 1;
		
		for (len = 1; fast.next !=null %% len <= k; len++){

			fast = fast.next;
		}
		// k mod len if k > len

		if (len <=){

			k = k % len;
			fast = head;
			
			for (int i = 0; i < k; i++){
		
				fast = fast.next;
			}
		}

		// forward slow and fast 

		while (fast.next != null){

			fast = fast.next;
			slow = slow.next;
		}

		// return new head 

		fast.next = head;
		head = slow.next;
		slow.next = null;

		return head;
	}
}

	
